{"version":3,"sources":["components/Tabs/Tabs.tsx","components/Tabs/helpers.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","setSelectedTab","selectedTab","tabId","find","tab","id","getTabById","className","map","cn","href","onClick","selectTab","title","content","App","useState","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,eAEMC,ECdkB,SAACH,EAAaI,GAAd,OACxBJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAUJ,EAAK,GDavBQ,CAAWR,EAAMC,GAQrC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAJ,GAAG,OACX,oBACEG,UAAWE,IAAG,CAAE,YAAaR,EAAYI,KAAOD,EAAIC,KACpD,UAAQ,MAFV,SAKE,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBAnBL,SAACP,GACbA,EAAIC,KAAON,GACbC,EAAeI,GAiBUQ,CAAUR,IAH3B,SAKGA,EAAIS,SAPFT,EAAIC,WAcjB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGN,EAAYa,cExCRhB,EAAc,CACzB,CAAEO,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAU,WACrB,MAAsCC,mBAAclB,EAAK,IAAzD,mBAAOG,EAAP,KAAoBD,EAApB,KAEA,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBN,EAAYY,SAElC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeE,EAAYI,GAC3BL,eAAgBA,QCrBxBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ca4ec3d.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../types/types';\nimport { getTabById } from './helpers';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  setSelectedTab: (tab: Tab) => void;\n};\n\nexport const Tabs: FC<Props> = ({\n  tabs,\n  selectedTabId,\n  setSelectedTab,\n}) => {\n  const selectedTab = getTabById(tabs, selectedTabId);\n\n  const selectTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      setSelectedTab(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={cn({ 'is-active': selectedTab.id === tab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { Tab } from '../types/types';\n\nexport const getTabById = (tabs: Tab[], tabId: string): Tab => (\n  tabs.find(tab => tab.id === tabId) || tabs[0]\n);\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './components/types/types';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        setSelectedTab={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}